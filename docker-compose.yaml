version: "3"
services:
  node_ts_postgres:
    container_name: node-ts-postgres
    build:
      context: .
      dockerfile: .Dockerfile
    env_file: .env
    depends_on:
      - postgres
    environment:
      DATABASE_URL: $DATABASE_URL
      NODE_ENV: $NODE_ENV
      PORT: $PORT
      JWT_SECRET: $JWT_SECRET
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - ./:/usr/app
    command: /usr/app/entrypoint.sh
    ports:
      - 8080:8080


  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    env_file: .env
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_DEFAULT_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD
      PGADMIN_LISTEN_PORT: $PGADMIN_LISTEN_PORT
    ports:
      - "8000:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:13-alpine
    env_file: .env
    ports:
      - "5432:5432"
    volumes: 
      - db-data:/var/lib/postgresql/data
      - ./src/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
      - ./db-scripts/01-init.sh:/docker-entrypoint-initdb.d/01-init.sh
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}" #just a string interpolation
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB


volumes:
  pgadmin-data:
  db-data:
